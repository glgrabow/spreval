sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8)# label sprinklers as in reference
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8)# label sprinklers as in reference
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8)# label sprinklers as in reference
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8)# label sprinklers as in reference
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8)# label sprinklers as in reference
render::markdown()
library(spreval)
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
library(spreval)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
dev = "png", dev.args = list(type = "cairo-png")
)
#set graphics device so that pkgdown::build_site() will run, seems to default to ragg
data(catchcan)
cc.data<-catchcan$lateral
knitr::kable(cc.data,format="html")
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
library(spreval)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
dev = "png", dev.args = list(type = "cairo-png")
)
#set graphics device so that pkgdown::build_site() will run, seems to default to ragg
data(catchcan)
cc.data<-catchcan$lateral
knitr::kable(cc.data,format="html")
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
library(spreval)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
dev = "png", dev.args = list(type = "cairo-png")
)
#set graphics device so that pkgdown::build_site() will run, seems to default to ragg
data(catchcan)
cc.data<-catchcan$lateral
knitr::kable(cc.data,format="html")
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
library(spreval)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
dev = "png", dev.args = list(type = "cairo-png")
)
#set graphics device so that pkgdown::build_site() will run, seems to default to ragg
data(catchcan)
cc.data<-catchcan$lateral
knitr::kable(cc.data,format="html")
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8,col=1) # label sprinklers as in reference
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8,col=1) # label sprinklers as in reference
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8,col=1)
library(spreval)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
dev = "png", dev.args = list(type = "cairo-png")
)
#set graphics device so that pkgdown::build_site() will run, seems to default to ragg
data(catchcan)
cc.data<-catchcan$lateral
knitr::kable(cc.data,format="html")
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8,col=1) # label sprinklers as in reference
text(c(-10,-10,0),c(5,10,40),c("s4","s5","s6"),cex=0.8,col=1)
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8,col=1) # label sprinklers as in reference
points(c(-10,-10,0),c(5,10,40),col=1)
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8,col=1) # label sprinklers as in reference
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8,col=1) # label sprinklers as in reference
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8,col=1) # label sprinklers as in reference
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
plot(1:10)
text(6,6,"hi")
text(c(2,2),c(4,6),c("hi","bye"))
source('/Volumes/Research/R_stuff/Packages/spreval/R/plotss.R', echo=TRUE)
source('/Volumes/Research/R_stuff/Packages/spreval/R/plotss.R', echo=TRUE)
source('/Volumes/Research/R_stuff/Packages/spreval/R/plotss.R', echo=TRUE)
data(catchcan)
cc.data<-catchcan$lateral
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
text(0,30,"blah")
text(0,30,"blah")
points(0,25)
plot(1:10)
source('/Volumes/Research/R_stuff/Packages/spreval/R/plotss.R', echo=TRUE)
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(0,30,"blah")
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
View(plotss)
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
source('/Volumes/Research/R_stuff/Packages/spreval/R/plotss.R', echo=TRUE)
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
source('/Volumes/Research/R_stuff/Packages/spreval/R/plotss.R', echo=TRUE)
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
plot.new
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8) # label sprinklers as in reference
source('/Volumes/Research/R_stuff/Packages/spreval/R/plotss.R', echo=TRUE)
library(spreval)
testpar<-par(no.readonly = TRUE)
testpar
par()
source('/Volumes/Research/R_stuff/Packages/spreval/R/plotss.R', echo=TRUE)
library(spreval)
par()
par()
oldpar
data(catchcan)
cc.data<-catchcan$lateral
library(spreval)
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
par(pty="s")
par()
par(pty="s")
par()
old.test<-par(no.readonly=T)
old.test
par(pty='s')
par()
par(pty="s")
plot(iris$Petal.Width, iris$Petal.Length, asp=1)
lines(2+c(0,1,1,0,0),3+c(0,0,1,1,0)) # confirm square visually
par()
par(pty="r")
par(pty="m")
par()
par(pty="s")
par()
par(pty="s")
par()
par(pty="r")
par(pty="m")
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
par(pty="s")
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8,col=1) # label sprinklers as in reference
par()
cdata
sploc
plotss(cdata,sploc,imcol=TRUE)# call function
plot.new
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
par(pty="s")
plotss(cdata,sploc,imcol=TRUE)# call function
text(c(0,0,0),c(2,28,58),c("s4","s5","s6"),cex=0.8,col=1) # label sprinklers as in reference
par()
par()
library(spreval)
knitr::opts_knit$set(global.par = TRUE)
x<-seq(-35,25,10) # x=0 is lateral position. 10 x 10 catch can spacing
y<-seq(55,5,-10)
grd<-list(x,y) # prepare list for make.surface function [fields]
grid<-fields::make.surface.grid(grd)
rates<-matrix(t(cc.data),ncol=1)#transpose matrix and stack rows into 1 column
cdata<-cbind(grid[ ,1],grid[ ,2],rates) #construct required catch can data matrix
sp.x<-rep(0,3);sp.y<-seq(0,60,30)# sprinkler spacing (y) = 30 ft
sploc<-cbind(sp.x,sp.y) #construct required sprinkler location matrix
par(pty="s")
sploc
sp.x
cdata
sploc
par()
capabilities()
dev.cur()
par()
library(spreval)
library(spreval)
library(spreval)
library(spreval)
library(spreval)
library(spreval)
sprinklerx<-c(0,0,60,60)
sprinklery<-c(60,0,60,0)
sploc<-cbind(sprinklerx,sprinklery)
#construct can data matrix
gage.space<-15
x<-c(rep(7.5,4),rep(22.5,4),rep(37.5,4),rep(52.5,4))
y<-rep(seq(52.5,7.5,-gage.space),4)
depth<-c(0.3,0.32,0.26,0.26,0.16,0.32,0.14,0.41,
0.14,0.27,0.38,0.34,0.29,0.32,0.45,0.25)
cdata<-cbind(x,y,depth)
plotss(cdata,sploc,xlab="ft",ylab="ft")
devtools::spell_check("/Volumes/Research/R_stuff/Packages/spreval")
library(spreval)
# set sprinkler locations (ft here)
sprinklerx<-c(0,0,60,60)
sprinklery<-c(60,0,60,0)
sploc<-cbind(sprinklerx,sprinklery)
#construct can data matrix
gage.space<-15
x<-c(rep(7.5,4),rep(22.5,4),rep(37.5,4),rep(52.5,4))
y<-rep(seq(52.5,7.5,-gage.space),4)
depth<-c(0.3,0.32,0.26,0.26,0.16,0.32,0.14,0.41,
0.14,0.27,0.38,0.34,0.29,0.32,0.45,0.25)
cdata<-cbind(x,y,depth)
plotss(cdata,sploc,xlab="ft",ylab="ft")
source('/Volumes/Research/R_stuff/Packages/spreval/R/rotecdf.R', echo=TRUE)
target<-3
# generate data with mean of target amount and high variability (non-uniformity)
x<-rnorm(25,3,1.75)
sfplot(x,target,ylab="depth applied (caught)")
# generate data with mean of target amount and low varibility (uniformity)
xx<-rnorm(25,3,0.5)
sfplot(xx,target)#no y axis label provided - defaults to array object name
source('/Volumes/Research/R_stuff/Packages/spreval/R/rotecdf.R', echo=TRUE)
target<-3
# generate data with mean of target amount and high variability (non-uniformity)
x<-rnorm(25,3,1.75)
sfplot(x,target,ylab="depth applied (caught)")
# generate data with mean of target amount and low varibility (uniformity)
xx<-rnorm(25,3,0.5)
sfplot(xx,target)#no y axis label provided - defaults to array object name
source('/Volumes/Research/R_stuff/Packages/spreval/R/travunif.R', echo=TRUE)
# units can be SI or US Customary, e.g.
# SI - mm for catch can data and m for lane and catch
# can spacing
# U.S. cust. -  in. for catch can data and ft for lane
# and catch can spacing
left<-c(0.17,0.22,0.18,0.21,0.13,0.05,0.02,0) # units are in.
right<-c(0.16,0.2,0.21,0.2,0.21,0.13,0.06,0.02)
ls<-165;gs<-16 # units are ft
travunif(ls,gs,left,right)
}
# units can be SI or US Customary, e.g.
# SI - mm for catch can data and m for lane and catch
# can spacing
# U.S. cust. -  in. for catch can data and ft for lane
# and catch can spacing
left<-c(0.17,0.22,0.18,0.21,0.13,0.05,0.02,0) # units are in.
right<-c(0.16,0.2,0.21,0.2,0.21,0.13,0.06,0.02)
ls<-165;gs<-16 # units are ft
travunif(ls,gs,left,right,site="mine")
source('/Volumes/Research/R_stuff/Packages/spreval/R/edastats.R', echo=TRUE)
#generate and plot univariate normally distributed data
require(graphics)
x<-rnorm(25,1,0.25)
eda.shape(x,title="my normal data")
#generate and plot univariate normally distributed data
require(graphics)
x<-rnorm(25,1,0.25)
eda.shape(x)
#generate and plot univariate normally distributed data
require(graphics)
x<-rnorm(25,1,0.25)
eda.shape(x,title="test")
source('/Volumes/Research/R_stuff/Packages/spreval/R/edastats.R', echo=TRUE)
source('/Volumes/Research/R_stuff/Packages/spreval/R/edastats.R', echo=TRUE)
#generate and plot univariate normally distributed data
require(graphics)
x<-rnorm(25,1,0.25)
eda.shape(x,title="test")
#generate and plot univariate normally distributed data
require(graphics)
x<-rnorm(25,1,0.25)
eda.shape(x,title="")
#generate and plot univariate normally distributed data
require(graphics)
x<-rnorm(25,1,0.25)
eda.shape(x)
source('/Volumes/Research/R_stuff/Packages/spreval/R/edastats.R', echo=TRUE)
#generate and plot univariate normally distributed data
require(graphics)
x<-rnorm(25,1,0.25)
eda.shape(x)
#generate and plot univariate normally distributed data
require(graphics)
x<-rnorm(25,1,0.25)
eda.shape(x,title="mystuff")
devtools::spell_check("/Volumes/Research/R_stuff/Packages/spreval")
library(spreval)
library(spreval)
pkgdown::build_site()
source('/Volumes/Research/R_stuff/Packages/spreval/R/plotss.R', echo=TRUE)
# set sprinkler locations (ft here)
sprinklerx<-c(0,0,60,60)
sprinklery<-c(60,0,60,0)
sploc<-cbind(sprinklerx,sprinklery)
#construct can data matrix
gage.space<-15
x<-c(rep(7.5,4),rep(22.5,4),rep(37.5,4),rep(52.5,4))
y<-rep(seq(52.5,7.5,-gage.space),4)
depth<-c(0.3,0.32,0.26,0.26,0.16,0.32,0.14,0.41,
0.14,0.27,0.38,0.34,0.29,0.32,0.45,0.25)
cdata<-cbind(x,y,depth)
plotss(cdata,sploc,xlab="ft",ylab="ft")
# set sprinkler locations (ft here)
sprinklerx<-c(0,0,60,60)
sprinklery<-c(60,0,60,0)
sploc<-cbind(sprinklerx,sprinklery)
#construct can data matrix
gage.space<-15
x<-c(rep(7.5,4),rep(22.5,4),rep(37.5,4),rep(52.5,4))
y<-rep(seq(52.5,7.5,-gage.space),4)
depth<-c(0.3,0.32,0.26,0.26,0.16,0.32,0.14,0.41,
0.14,0.27,0.38,0.34,0.29,0.32,0.45,0.25)
cdata<-cbind(x,y,depth)
plotss(cdata,sploc,xlab="ft",ylab="ft",title="mine")
library(spreval)
library(spreval)
pkgdown::build_site()
test<-c(1,2,3,4,3,2,5,7,6,8)
CU(test)
DU.lh(test)
rhub::check_for_cran(platforms=c("debian-clang-devel","fedora-clang-devel"))
